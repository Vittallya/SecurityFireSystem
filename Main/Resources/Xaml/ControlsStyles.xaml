<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:Main.Resources">


    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
    x:Key="LinkButton"
    TargetType="Button">
        <Setter
        Property="Template">
            <Setter.Value>
                <ControlTemplate
                TargetType="Button">
                    <TextBlock
                    TextDecorations="Underline">
                <ContentPresenter /></TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter
            Property="Foreground"
            Value="Blue" />
            <Style.Triggers>
                <Trigger
                    Property="IsMouseOver"
                    Value="true">
                    <Setter
                        Property="Foreground"
                        Value="Red" />
                </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SprigniessText" TargetType="TextBlock">
        <Style.Triggers>
            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin">
                                <EasingThicknessKeyFrame 
                                                                                KeyTime="0:0:0.1" Value="-40 20 0 0"/>

                                <EasingThicknessKeyFrame 
                                                                                KeyTime="0:0:0.5" Value="0 20 0 0">
                                    <EasingThicknessKeyFrame.EasingFunction>
                                        <ElasticEase Oscillations="5"/>
                                    </EasingThicknessKeyFrame.EasingFunction>
                                </EasingThicknessKeyFrame>

                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>

                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <SolidColorBrush x:Key="Button.Static.Background" Color="#FF168BEF"/>
    <SolidColorBrush x:Key="Button.Static.Background1" Color="White"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FF909090"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF474747"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="White"/>

    <Style TargetType="Button" x:Key="ButtonLogin">

        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{DynamicResource ButtonLoginT}"/>
    </Style>

    <Style TargetType="Button" x:Key="ButtonSkip">

        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{DynamicResource ButtonLoginT}"/>
    </Style>



    <Style x:Key="BackButton" TargetType="Button" BasedOn="{StaticResource ButtonLogin}">
        <Setter Property="Background" Value="#FFE2B8B8"/>
        <Setter Property="Foreground" Value="#FFAD0000"/>
        <Setter Property="Padding" Value="25 5"/>
        <Setter Property="FontSize" Value="18"/>


        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">


                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation 
                                                    To="0.85"
                                                    Duration="0:0:0.1"
                                                    Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation 
                                                    To="1"
                                                    Duration="0:0:0.2"
                                                    Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>

            </Trigger>
            <Trigger Property="IsPressed" Value="True">


                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation 
                                                    To="#FFC09898"
                                                    Duration="0:0:0.1"
                                                    Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation 
                                                    
                                                    Duration="0:0:0.2"
                                                    Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>

            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="MenuButton" TargetType="Button" BasedOn="{StaticResource ButtonLogin}">
        <Setter Property="Background" Value="#FFBA5151"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Padding" Value="25 6"/>



        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">


                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation 
                                                    To="#FFED6868"
                                                    Duration="0:0:0.1"
                                                    Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation 
                                                    
                                                    Duration="0:0:0.2"
                                                    Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>

            </Trigger>
            <Trigger Property="IsPressed" Value="True">


                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation 
                                                    To="#FF9A3C3C"
                                                    Duration="0:0:0.1"
                                                    Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation 
                                                    
                                                    Duration="0:0:0.2"
                                                    Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>

            </Trigger>
        </Style.Triggers>

    </Style>



    <Style TargetType="Button" x:Key="ButtonNext">

        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <!--<Setter Property="Background" Value="{DynamicResource BackgroundPositive}"/>-->
        <Setter Property="Background" Value="Green"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{DynamicResource ButtonNextT}"/>
    </Style>

    <Style TargetType="Button" x:Key="ButtonEmpty">

        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{DynamicResource ButtonNextT}"/>
    </Style>
    
    <ControlTemplate x:Key="ButtonLoginT" TargetType="{x:Type Button}">
        <Border 
                        CornerRadius="4"
                        x:Name="border" 
                        Background="{TemplateBinding Background}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>


            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ButtonEmptyT" TargetType="{x:Type Button}">


        <Border 
                        CornerRadius="4"
                        x:Name="border" 
                        Background="{x:Null}" 
                        BorderThickness="0" 
                        BorderBrush="{x:Null}" SnapsToDevicePixels="true">
            
            <ContentPresenter x:Name="contentPresenter" 
                          Focusable="False" 
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                          Margin="{TemplateBinding Padding}" 
                          RecognizesAccessKey="True" 
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>

        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                         Duration="0:0:0.2"
                                                         To="1.03"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                         Duration="0:0:0.2"
                                                         To="1.03"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                         Duration="0:0:0.2"
                                                         To="1"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                         Duration="0:0:0.2"
                                                         To="1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>

            </Trigger>

            <Trigger Property="IsEnabled" Value="false">

                <Setter Property="Opacity" Value="0.7"/>
                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="ButtonNextT" TargetType="{x:Type Button}">
        <Border 
                        CornerRadius="4"
                        x:Name="border" 
                        Background="{TemplateBinding Background}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Duration="0:0:0.2"
                                                         To="0.85"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Duration="0:0:0.2"
                                                         To="1"/>
                            <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                         Duration="0:0:0"
                                                         To="#FF66AD65"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>

            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                             Duration="0:0:0.1"
                                                             To="DarkGreen"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                             Duration="0:0:0.2"
                                                             To="#FF66AD65"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>

            </Trigger>

            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="TextBox" x:Key="LoginTextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <TextBlock 
                                            
                                            Margin="4 0 0 4" 
                                            x:Name="textBlock" 
                                            Foreground="Gray" 
                                            FontSize="16"  
                                            Text="Логин:" 
                                            RenderTransformOrigin="0,0"/>

                        <TextBox 
                                            BorderThickness="0" 
                                            Height="27" 
                                            x:Name="textBox"  
                                            IsTabStop="{TemplateBinding IsTabStop}"
                                            FontFamily="{TemplateBinding FontFamily}"
                                            FontSize="{TemplateBinding FontSize}"   
                                            DataContext="{Binding RelativeSource={RelativeSource AncestorType=Page}, Path=DataContext}"
                                            Text="{Binding Login, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                            BorderBrush="{x:Null}" 
                                            Background="{x:Null}"/>


                        <Border VerticalAlignment="Bottom" Height="2" Background="LightGray"/>
                        <Border 
                                            x:Name="border_selected" 
                                            VerticalAlignment="Bottom" 
                                            Height="2" 
                                            Background="#FF168BEF" RenderTransformOrigin="0,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="0"/>
                            </Border.RenderTransform>
                        </Border>


                    </Grid>

                    <ControlTemplate.Triggers>

                        <DataTrigger Binding="{Binding ElementName=textBox, Path=IsFocused}" Value="True">

                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                                            Storyboard.TargetName="border_selected" 
                                                            Duration="0:0:0.7" To="1" 
                                                            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)">
                                            <DoubleAnimation.EasingFunction>
                                                <ElasticEase Oscillations="0"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <ColorAnimationUsingKeyFrames
                                                                    Storyboard.TargetName="textBlock" 
                                                                    Duration="0:0:0.7"
                                                                    Storyboard.TargetProperty="(TextBox.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF168BEF" />
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>
                                </BeginStoryboard>

                            </DataTrigger.EnterActions>

                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                                            Storyboard.TargetName="border_selected" 
                                                            Duration="0:0:0.7" To="0" 
                                                            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)">
                                            <DoubleAnimation.EasingFunction>
                                                <ElasticEase Oscillations="0"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <ColorAnimationUsingKeyFrames
                                                                    Storyboard.TargetName="textBlock" 
                                                                    Duration="0:0:0.7"
                                                                    Storyboard.TargetProperty="(TextBox.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>

                            </DataTrigger.ExitActions>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=textBox, Path=IsFocused}"  Value="False"/>
                                <Condition Binding="{Binding ElementName=textBox, Path=Text}" Value="{x:Static sys:String.Empty}"/>
                            </MultiDataTrigger.Conditions>

                            <MultiDataTrigger.EnterActions>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                                            Storyboard.TargetName="textBlock" 
                                                            Duration="0:0:0.7" To="16" 
                                                            Storyboard.TargetProperty="FontSize">
                                            <DoubleAnimation.EasingFunction>
                                                <ElasticEase Oscillations="0"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <ThicknessAnimation 
                                                            Storyboard.TargetName="textBlock" 
                                                            Duration="0:0:0.7" To="4 0 0 4" 
                                                            Storyboard.TargetProperty="Margin">
                                            <ThicknessAnimation.EasingFunction>
                                                <ElasticEase Oscillations="0"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>

                                </BeginStoryboard>

                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                                            Storyboard.TargetName="textBlock" 
                                                            Duration="0:0:0.7" To="14" 
                                                            Storyboard.TargetProperty="FontSize">
                                            <DoubleAnimation.EasingFunction>
                                                <ElasticEase Oscillations="0"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <ThicknessAnimation 
                                                            Storyboard.TargetName="textBlock" 
                                                            Duration="0:0:0.7" To="2 -20 0 4" 
                                                            Storyboard.TargetProperty="Margin">
                                            <ThicknessAnimation.EasingFunction>
                                                <ElasticEase Oscillations="0"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>

                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
    <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>